var Callback=function(b,a){this.init(b,a);return(this)};Callback.prototype.isCallback=true;Callback.prototype.init=function(b,a){if(b instanceof Callback){this.thisObj=b.thisObj;this.callbackFn=b.callbackFn}else{this.thisObj=b;this.callbackFn=a}};Callback.prototype.empty=function(){};Callback.prototype.execCallback=function(){if(this.callbackFn){this.callbackFn.apply(this.thisObj,arguments)}};var EmptyCallback=function(){var a=function(){};this.init(this,a);return(this)};EmptyCallback.prototype=new Callback();EmptyCallback.prototype.constructor=EmptyCallback;var SuccessFailCallback=function(b,a,d,c){this.successCB=new Callback(b,a);this.failureCB=new Callback(d,c)};SuccessFailCallback.prototype.isCallback=true;SuccessFailCallback.prototype.success=function(){this.successCB.execCallback.apply(this.successCB,arguments)};SuccessFailCallback.prototype.fail=function(){this.failureCB.execCallback.apply(this.failureCB,arguments)};var emptySFCallback=new SuccessFailCallback(this,function(){},this,function(){});var isSuccessFailCallback=function(a){return(a&&a.success&&a.fail)};function logMsg(a){if(typeof DEBUG==="undefined"&&DEBUG!==false){console.log(logMsg)}}function logObj(b,a){logMsg(b);logObj(a)}function printArguments(){console.og(arguments)}function simpleSuccess(a){logMsg("success");printArguments(arguments)}function simpleFailure(a){logMsg("fail");printArguments(arguments)}var debugCB=new SuccessFailCallback(this,simpleSuccess,this,simpleFailure);var CountdownCallback=function(b,c,a){this.latchCount=b;this.init(c,a);return(this)};CountdownCallback.prototype=new Callback();CountdownCallback.prototype.constructor=CountdownCallback;CountdownCallback.prototype.addStrap=function(){this.latchCount++;console.log("addStrap["+this.latchCount+"]")};CountdownCallback.prototype.getLatchCount=function(){return(this.latchCount)};CountdownCallback.prototype.isReleased=function(){return(this.latchCount<=0)};CountdownCallback.prototype.release=function(){this.latchCount--;console.log("release["+this.latchCount+"]");if(this.latchCount<0){this.latchCount=0}if(this.latchCount===0){this.callbackFn.apply(this.thisObj,arguments);return(true)}else{return(false)}};var NamedLatch=function(a,d,b){this.latches={};this.isChatty=false;if(a){for(var c=0;c<a.length;c++){this.addStrap(a[c])}}this.init(d,b)};var NamedLatchLock=function(a){this.name=a};NamedLatch.prototype=new Callback();NamedLatch.prototype.constructor=NamedLatch;NamedLatch.prototype.addStrap=function(a){if(!a){return}if(this.latches.hasOwnProperty(a)){if(console&&console.error){console.error("Latch["+a+"] has already been used")}throw ("ALREADY_USED")}else{this.latches[a]=new NamedLatchLock(a)}};NamedLatch.prototype.getLatchCount=function(){var a=0;var c=null;for(var b in this.latches){c=this.latches[b];if(c instanceof NamedLatchLock&&!c.isReleased){a++}}return(a)};NamedLatch.prototype.isReleased=function(){var b=null;for(var a in this.latches){b=this.latches[a];if(b instanceof NamedLatchLock){if(!b.isReleased){return(false)}}}return(true)};NamedLatch.prototype.hasLatch=function(a){if(!a){return}return(this.latches.hasOwnProperty(a))};NamedLatch.prototype.isLatchReleased=function(b){if(!b){return}if(this.latches.hasOwnProperty(b)){var a=this.latches[b];return(a.isReleased)}else{return(true)}};NamedLatch.prototype.release=function(d,a){if(!d){return}if(!this.latches.hasOwnProperty(d)){if(console&&console.error){console.error("no latch was found with that name["+d+"]")}throw ("NOT_FOUND")}else{var c=this.latches[d];var b=c.isReleased;if(this.isChatty&&console&&console.log){console.log("released latch["+d+"]")}c.isReleased=true;if(this.isReleased()){this.callbackFn.apply(this.thisObj,a)}return(!b)}return(false)};var CyclicalCallback=function(b,c,a){this.latchCount=b;this.initialLatch=b;this.init(c,a)};CyclicalCallback.prototype=new CountdownCallback();CyclicalCallback.prototype.constructor=CyclicalCallback;CyclicalCallback.prototype.release=function(){if(CountdownCallback.prototype.release.apply(this,arguments)){this.latchCount=this.initialLatch;return(true)}else{return(false)}};var RunnableCallback=function(a){this.callback=a};RunnableCallback.prototype.isCallback=true;RunnableCallback.prototype.run=function(){this.callback.execCallback.apply(this,arguments)};if(typeof debugMode=="undefined"){debugMode=true}var debugMode=debugMode;if(typeof logTarget=="undefined"){logTarget=1}var logTarget=logTarget;var LOG_INFO="info";var LOG_WARN="warn";var LOG_ERROR="error";var logMsg=function(c,b){if(!c){return}if(b==LOG_INFO||b==LOG_WARN||b==LOG_ERROR){}else{b=LOG_INFO}if(debugMode){try{if(b==LOG_WARN){console.warn(c)}else{if(b==LOG_ERROR){console.error(c)}else{console.log(c)}}}catch(a){console.log("error occurred while logging a message to console")}}};var logWarn=function(a){logMsg(a,LOG_WARN)};var logError=function(a){logMsg(a,LOG_ERROR)};var logObj=function(a,b){logMsg(a);logMsg(b)};var logToConsole=logMsg;var printObj=function(b,c){console.log("printing["+b+"]");if(c){for(var a in c){console.log(b+"["+(c[a])+"]:"+(typeof c[a])+":["+c[a]+"]")}}console.log("done printing["+b+"]")};var printArguments=function(a){if(!a){logMsg("arguments[0]")}else{console.log("arguments["+a.length+"]");for(var b=0;b<a.length;b++){console.log("["+b+"/"+a.length+"]:");console.log(a[b])}console.log("arguments["+a.length+"] DONE")}};