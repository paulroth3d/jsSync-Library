{
    "project": {
        "name": "MM Sync Engine",
        "description": "GE MobileMap",
        "appVersion": "1.0.0",
        "logo": "http://mm-proth.s3.amazonaws.com/syncIcon.png"
    },
    "files": {
        "src/asynch.js": {
            "name": "src/asynch.js",
            "modules": {
                "JSAsynch": 1
            },
            "classes": {
                "Callback": 1,
                "EmptyCallback": 1,
                "SuccessFailCallback": 1,
                "CountdownCallback": 1,
                "NamedLatch": 1,
                "CyclicalCallback": 1,
                "RunnableCallback": 1
            },
            "fors": {
                "Callback": 1,
                "SuccessFailCallback": 1,
                "CountdownCallback": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "JSAsynch": {
            "name": "JSAsynch",
            "submodules": {},
            "classes": {
                "Callback": 1,
                "EmptyCallback": 1,
                "SuccessFailCallback": 1,
                "CountdownCallback": 1,
                "NamedLatch": 1,
                "CyclicalCallback": 1,
                "RunnableCallback": 1
            },
            "fors": {
                "Callback": 1,
                "SuccessFailCallback": 1,
                "CountdownCallback": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/asynch.js",
            "line": 476,
            "description": "Object that represents a specific method invocation that can be called at any time\n(or repeatedly) in an agnostic manner.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "thisObj",
                    "description": "(Object) the scope object (commonly used for 'this') that the method will run in."
                },
                {
                    "name": "fn",
                    "description": "(Function) the function to call"
                }
            ]
        }
    },
    "classes": {
        "Callback": {
            "name": "Callback",
            "shortname": "Callback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSAsynch",
            "namespace": "",
            "file": "src/asynch.js",
            "line": 6,
            "description": "Object that represents a specific method invocation that can be called at any time\n(or repeatedly) in an agnostic manner."
        },
        "EmptyCallback": {
            "name": "EmptyCallback",
            "shortname": "EmptyCallback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSAsynch",
            "namespace": "",
            "file": "src/asynch.js",
            "line": 77,
            "description": "Empty callback if a callback must exist but not do anything."
        },
        "SuccessFailCallback": {
            "name": "SuccessFailCallback",
            "shortname": "SuccessFailCallback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSAsynch",
            "namespace": "",
            "file": "src/asynch.js",
            "line": 93,
            "description": "Object that supports both a success and a failure",
            "is_constructor": 1,
            "extends": "Callback",
            "params": [
                {
                    "name": "successThis",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "succcessFn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "failureThis",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "failureFn",
                    "description": "",
                    "type": "Function"
                }
            ]
        },
        "CountdownCallback": {
            "name": "CountdownCallback",
            "shortname": "CountdownCallback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSAsynch",
            "namespace": "",
            "file": "src/asynch.js",
            "line": 196,
            "description": "Object that has a set number of latches. Once all the latches are released",
            "is_constructor": 1,
            "params": [
                {
                    "name": "latchCount",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "thisObj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callbackFn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "extends": "Callback"
        },
        "NamedLatch": {
            "name": "NamedLatch",
            "shortname": "NamedLatch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSAsynch",
            "namespace": "",
            "file": "src/asynch.js",
            "line": 281,
            "description": "NamedLatch requires that all latches provided must be released\nThis means that latches must be unique or will throw an exception.",
            "is_constructor": 1,
            "extends": "CountdownCallback",
            "params": [
                {
                    "name": "latchList",
                    "description": "(Array<String>)"
                },
                {
                    "name": "thisObj",
                    "description": ""
                },
                {
                    "name": "callbackFn",
                    "description": ""
                }
            ]
        },
        "CyclicalCallback": {
            "name": "CyclicalCallback",
            "shortname": "CyclicalCallback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSAsynch",
            "namespace": "",
            "file": "src/asynch.js",
            "line": 431,
            "description": "Object that represents a cyclical barrier",
            "is_constructor": 1,
            "extends": "CountdownCallback",
            "params": [
                {
                    "name": "latchCount",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "thisObj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callbackFn",
                    "description": "",
                    "type": "Function"
                }
            ]
        },
        "RunnableCallback": {
            "name": "RunnableCallback",
            "shortname": "RunnableCallback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSAsynch",
            "namespace": "",
            "file": "src/asynch.js",
            "line": 476,
            "description": "Abstract class that contains a callback that should execute at some point after\ncompleting run. (This allows for asynchronous methods to run that should perform\na callback when it has completed)",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src/asynch.js",
            "line": 22,
            "description": "Describes the object as being a callback",
            "itemtype": "property",
            "name": "isCallback",
            "class": "Callback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 44,
            "description": "Empty method to provide a NOOP",
            "itemtype": "method",
            "name": "empty",
            "access": "protected",
            "tagname": "",
            "class": "Callback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 51,
            "description": "Performs the callback.\n<p>Note, exec, callback, run, among other names could potentially be considered keywoards,\nso the name was chosen instead</p>\n<p>Calling the method with a null scope can cause some unexpected consequences</p>",
            "itemtype": "method",
            "name": "execCallback",
            "params": [
                {
                    "name": "PASSTHROUGH",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "Callback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 110,
            "description": "Calls success method.\n(Meaning it calls the successFn using successThis as the scope",
            "itemtype": "method",
            "name": "success",
            "params": [
                {
                    "name": "PASSTHROUGH",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "SuccessFailCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 121,
            "description": "Calls failure method.\n(Meaning it calls the failureFn using failureThis as the scope",
            "itemtype": "method",
            "name": "fail",
            "params": [
                {
                    "name": "PASSTHROUGH",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "SuccessFailCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 134,
            "description": "Determines whether the object is a successFailCallback",
            "global": "",
            "itemtype": "method",
            "name": "isSuccessFailCallback",
            "params": [
                {
                    "name": "obj",
                    "description": "- object to be determined whether it is a successFailCallback",
                    "type": "Object"
                }
            ],
            "class": "SuccessFailCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 145,
            "description": "simple function that claims sucess and console logs out all arguments.\n<p>Example usage: forcetkClient.query( myQuery, simpleSuccess, simpleFailure );</p>",
            "global": "",
            "itemtype": "method",
            "name": "simpleSuccess",
            "params": [
                {
                    "name": "PASSTHROUGH",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "SuccessFailCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 157,
            "description": "Simple function that claims failure and console logs out all arguments\n<p>Example usage: forcetkClient.query( myQuery, simpleSuccess, simpleFailure );</p>",
            "global": "",
            "itemtype": "method",
            "name": "simpleFailure",
            "params": [
                {
                    "name": "PASSTHROUGH",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "SuccessFailCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 169,
            "description": "Simple callback that simply claims success, or failure and console logs the results.\n<p>Note: it may be preferrable to use a different object with large datasets/volumes\nas consolelog, especially from the device can have issues with too many records being printed at a time</p>",
            "itemtype": "property",
            "name": "debugCB",
            "global": "",
            "class": "SuccessFailCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 217,
            "description": "Adds a latch to the count as something else that needs to be waited for",
            "itemtype": "method",
            "name": "addStrap",
            "class": "CountdownCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 227,
            "description": "Determines the number of latches remaining",
            "itemtype": "method",
            "name": "getLatchCount",
            "class": "CountdownCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 235,
            "description": "Determines if the latch is currently released",
            "itemtype": "method",
            "name": "isReleased",
            "class": "CountdownCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 243,
            "description": "Releases a latch and executes the callbackFn if all the latches are released.",
            "params": [
                {
                    "name": "boolean",
                    "description": "- whether the latch is currently released"
                },
                {
                    "name": "PASSTHROUGH",
                    "description": "",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "release",
            "class": "CountdownCallback",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 370,
            "description": "Determines whether a named latch has been released",
            "itemtype": "method",
            "name": "isLatchReleased",
            "params": [
                {
                    "name": "latchName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "NamedLatch",
            "module": "JSAsynch"
        },
        {
            "file": "src/asynch.js",
            "line": 489,
            "description": "Calls the callback",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "PASSTHROUGH",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "RunnableCallback",
            "module": "JSAsynch"
        }
    ],
    "warnings": []
}